openapi: "3.0.1"
info:
  description: API client for https://tenor.com/gifapi/
  version: "0.1"
  contact:
    name: Warren Gray
    email: warren@warren-gray.com
  license:
    name: The Unlicence
    url: https://github.com/WarrenGray/tenor-go/blob/main/LICENSE
  title: Tenor GifAPI Client

servers:
- url: https://g.tenor.com
  description: g.tenor.com

paths:
  /v1/search:
    get:
      operationId: search
      description: >
        Get a json object containing a list of the most relevant GIFs for a given search term(s), category(ies),
        emoji(s), or any combination thereof.
      parameters:
      - $ref: '#/components/parameters/q'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/locale'
      - $ref: '#/components/parameters/contentfilter'
      - $ref: '#/components/parameters/media_filter'
      - $ref: '#/components/parameters/ar_range'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/pos'
      - $ref: '#/components/parameters/anon_id'
      responses:
        200:
          description: search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'

  /v1/random:
    get:
      operationId: random
      description: >
        Get a randomized list of GIFs for a given search term. This differs from the search endpoint which returns
        a rank ordered list of GIFs for a given search term.
      parameters:
      - $ref: '#/components/parameters/q'
      - $ref: '#/components/parameters/key'
      - $ref: '#/components/parameters/locale'
      - $ref: '#/components/parameters/contentfilter'
      - $ref: '#/components/parameters/media_filter'
      - $ref: '#/components/parameters/ar_range'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/pos'
      - $ref: '#/components/parameters/anon_id'
      responses:
        200:
          description: search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'

components:
  parameters:
    key:
      name: key
      required: true
      description: client key for privileged API access
      in: query
      schema:
        type: string
    q:
      name: q
      required: true
      description: a search string
      in: query
      schema:
        type: string
    locale:
      name: locale
      description: >
        specify default language to interpret search string; xx is ISO 639-1 language code, _YY (optional) is
        2-letter ISO 3166-1 country code
      in: query
      schema:
        type: string
    contentfilter:
      name: contentfilter
      description: |
        (values: off | low | medium | high) specify the content safety filter level
      in: query
      schema:
        type: string
        enum:
        - off
        - low
        - medium
        - high
    media_filter:
      name: media_filter
      description: |
        (values: basic | minimal) Reduce the Number of GIF formats returned in the GIF_OBJECT list.

        minimal - tinygif, gif, and mp4.

        basic - nanomp4, tinygif, tinymp4, gif, mp4, and nanogif
      in: query
      schema:
        type: string
        enum:
        - basic
        - minimal
    ar_range:
      name: ar_range
      description: |
        (values: all | wide | standard ) Filter the response GIF_OBJECT list to only include GIFs with aspect ratios that fit with in the selected range.

        all - no constraints

        wide - 0.42 <= aspect ratio <= 2.36

        standard - .56 <= aspect ratio <= 1.78
      in: query
      schema:
        type: string
        enum:
        - all
        - wide
        - standard
    limit:
      name: limit
      description: >
        fetch up to a specified number of results (max: 50).
      in: query
      schema:
        type: integer
    pos:
      name: pos
      description: >
        get results starting at position "value". Use a non-zero "next" value returned by API results to get the next
        set of results. pos is not an index and may be an integer, float, or string
      in: query
      schema:
        type: string
    anon_id:
      name: anon_id
      description: specify the anonymous_id tied to the given user
      in: query
      schema:
        type: string

  schemas:
    Next:
      type: string
      description: >
        a position identifier to use with the next API query to retrieve the next set of results, or null if there are
        no further results.
    GifObject:
      type: object
      required:
      - created
      - hasaudio
      - id
      - media
      - tags
      - title
      properties:
        created:
          type: number
          description: a unix timestamp representing when this post was created.
        hasaudio:
          type: boolean
          description: >
            true if this post contains audio (only video formats support audio, the gif image file format can not
            contain audio information).
        id:
          type: string
          description: Tenor result identifier
        media:
          type: array
          description: An array of dictionaries with GIF_FORMAT as the key and MEDIA_OBJECT as the value
          items:
            $ref: '#/components/schemas/Media'
        tags:
          type: array
          description: an array of tags for the post
          items:
            type: string
        title:
          type: string

    Media:
      type: object
      properties:
        gif:
          $ref: '#/components/schemas/MediaObject'
        mediumgif:
          $ref: '#/components/schemas/MediaObject'
        tinygif:
          $ref: '#/components/schemas/MediaObject'
        nanogif:
          $ref: '#/components/schemas/MediaObject'
        mp4:
          $ref: '#/components/schemas/MediaObject'
        loopedmp4:
          $ref: '#/components/schemas/MediaObject'
        tinymp4:
          $ref: '#/components/schemas/MediaObject'
        nanomp4:
          $ref: '#/components/schemas/MediaObject'
        webm:
          $ref: '#/components/schemas/MediaObject'
        tinywebm:
          $ref: '#/components/schemas/MediaObject'
        nanowebm:
          $ref: '#/components/schemas/MediaObject'

    MediaObject:
      type: object
      required:
      - preview
      - url
      - dims
      - size
      properties:
        preview:
          type: string
          description: a url to a preview image of the media source
        url:
          type: string
          description: a url to the media source
        dims:
          type: array
          description: width and height in pixels
          items:
            type: integer
        size:
          type: integer
          description: size of file in bytes

    SearchResponse:
      type: object
      required:
      - next
      - results
      properties:
        next:
          $ref: '#/components/schemas/Next'
        results:
          description: >
            an array of GifObjects containing the most relevant GIFs for the requested search term -
            Sorted by relevancy Rank
          type: array
          items:
            $ref: '#/components/schemas/GifObject'


