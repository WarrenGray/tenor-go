/*
 * Tenor GifAPI Client
 *
 * API client for https://tenor.com/gifapi/
 *
 * API version: 0.1
 * Contact: warren@warren-gray.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tenor

import (
	"encoding/json"
)

// GifObject struct for GifObject
type GifObject struct {
	// a unix timestamp representing when this post was created.
	Created float32 `json:"created"`
	// true if this post contains audio (only video formats support audio, the gif image file format can not contain audio information).
	Hasaudio bool `json:"hasaudio"`
	// Tenor result identifier
	Id string `json:"id"`
	// An array of dictionaries with GIF_FORMAT as the key and MEDIA_OBJECT as the value
	Media []Media `json:"media"`
	// an array of tags for the post
	Tags  []string `json:"tags"`
	Title string   `json:"title"`
}

// NewGifObject instantiates a new GifObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGifObject(created float32, hasaudio bool, id string, media []Media, tags []string, title string) *GifObject {
	this := GifObject{}
	this.Created = created
	this.Hasaudio = hasaudio
	this.Id = id
	this.Media = media
	this.Tags = tags
	this.Title = title
	return &this
}

// NewGifObjectWithDefaults instantiates a new GifObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGifObjectWithDefaults() *GifObject {
	this := GifObject{}
	return &this
}

// GetCreated returns the Created field value
func (o *GifObject) GetCreated() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *GifObject) GetCreatedOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *GifObject) SetCreated(v float32) {
	o.Created = v
}

// GetHasaudio returns the Hasaudio field value
func (o *GifObject) GetHasaudio() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Hasaudio
}

// GetHasaudioOk returns a tuple with the Hasaudio field value
// and a boolean to check if the value has been set.
func (o *GifObject) GetHasaudioOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hasaudio, true
}

// SetHasaudio sets field value
func (o *GifObject) SetHasaudio(v bool) {
	o.Hasaudio = v
}

// GetId returns the Id field value
func (o *GifObject) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GifObject) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GifObject) SetId(v string) {
	o.Id = v
}

// GetMedia returns the Media field value
func (o *GifObject) GetMedia() []Media {
	if o == nil {
		var ret []Media
		return ret
	}

	return o.Media
}

// GetMediaOk returns a tuple with the Media field value
// and a boolean to check if the value has been set.
func (o *GifObject) GetMediaOk() (*[]Media, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Media, true
}

// SetMedia sets field value
func (o *GifObject) SetMedia(v []Media) {
	o.Media = v
}

// GetTags returns the Tags field value
func (o *GifObject) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *GifObject) GetTagsOk() (*[]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tags, true
}

// SetTags sets field value
func (o *GifObject) SetTags(v []string) {
	o.Tags = v
}

// GetTitle returns the Title field value
func (o *GifObject) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *GifObject) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *GifObject) SetTitle(v string) {
	o.Title = v
}

func (o GifObject) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["created"] = o.Created
	}
	if true {
		toSerialize["hasaudio"] = o.Hasaudio
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["media"] = o.Media
	}
	if true {
		toSerialize["tags"] = o.Tags
	}
	if true {
		toSerialize["title"] = o.Title
	}
	return json.Marshal(toSerialize)
}

type NullableGifObject struct {
	value *GifObject
	isSet bool
}

func (v NullableGifObject) Get() *GifObject {
	return v.value
}

func (v *NullableGifObject) Set(val *GifObject) {
	v.value = val
	v.isSet = true
}

func (v NullableGifObject) IsSet() bool {
	return v.isSet
}

func (v *NullableGifObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGifObject(val *GifObject) *NullableGifObject {
	return &NullableGifObject{value: val, isSet: true}
}

func (v NullableGifObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGifObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
